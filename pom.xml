<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.javaetmoi.jetty</groupId>
    <artifactId>jetty-webapp</artifactId>
    <name>JavaEtMoi Demo :: ${project.artifactId} - ${project.packaging}</name>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <description>WAR-less Java web application with Jetty</description>
    <inceptionYear>2015</inceptionYear>
    <url>https://github.com/arey/embedded-jetty-webapp</url>

    <developers>
        <developer>
            <id>arey</id>
            <name>Antoine Rey</name>
            <email>antoine@javaetmoi.com</email>
            <url>http://javaetmoi.com</url>
            <timezone>+1</timezone>
            <roles>
                <role>Java Developer</role>
            </roles>
        </developer>
    </developers>

    <!-- Continous Integration build hosted by CloudBees -->
    <ciManagement>
        <system>jenkins</system>
        <url>https://javaetmoi.ci.cloudbees.com/job/embedded-jetty-webapp/</url>
    </ciManagement>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/arey/embedded-jetty-webapp/issues</url>
    </issueManagement>

    <!-- Apache 2 license -->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>


    <!-- GitHub Software Configuration Management -->
    <scm>
        <url>https://github.com/arey/embedded-jetty-webapp</url>
        <connection>scm:git:ssh://git@github.com/arey/embedded-jetty-webapp.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/arey/spring-batch-toolkit.git</developerConnection>
        <tag>HEAD</tag>
    </scm>


    <properties>
        <!-- Version of third libraries -->
        <version.javax-servlet>3.1.0</version.javax-servlet>
        <version.jetty>9.4.17.v20190418</version.jetty>
        <version.logback>1.2.13</version.logback>
        <version.slf4j>1.7.7</version.slf4j>

        <!-- Version of maven plugins -->
        <version.plugin.maven-compiler-plugin>2.3</version.plugin.maven-compiler-plugin>
        <version.plugin.maven-resources-plugin>2.4.3</version.plugin.maven-resources-plugin>
        <version.plugin.maven-source-plugin>2.1.2</version.plugin.maven-source-plugin>
        <version.plugin.maven-javadoc-plugin>2.7</version.plugin.maven-javadoc-plugin>
        <version.plugin.maven-release-plugin>2.5</version.plugin.maven-release-plugin>
        <version.plugin.nexus-staging-maven-plugin>1.6.2</version.plugin.nexus-staging-maven-plugin>
        <version.plugin.maven-gpg-plugin>1.5</version.plugin.maven-gpg-plugin>
        <version.plugin.exec-maven-plugin>1.3.2</version.plugin.exec-maven-plugin>
        <version.plugin.maven-jar-plugin>2.6</version.plugin.maven-jar-plugin>
        <version.plugin.appassembler-maven-plugin>1.9</version.plugin.appassembler-maven-plugin>
        <version.plugin.maven-assembly-plugin>2.5.3</version.plugin.maven-assembly-plugin>

        <!-- Source encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <!-- Jetty -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${version.jetty}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${version.jetty}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${version.jetty}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${version.jetty}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>${version.jetty}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${version.jetty}</version>
        </dependency>

        <!--  Servlet API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${version.javax-servlet}</version>
        </dependency>

        <!-- Logger -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.logback}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${version.slf4j}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.plugin.maven-compiler-plugin}</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${version.plugin.maven-resources-plugin}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${version.plugin.maven-source-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${version.plugin.maven-release-plugin}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${version.plugin.maven-javadoc-plugin}</version>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
            </plugin>
            <!-- Nexus Staging Maven Plugin for Deployment and Release into Sonatype OSSRH -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${version.plugin.nexus-staging-maven-plugin}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
            <plugin>
                <!-- Build an executable JAR -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.plugin.maven-jar-plugin}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.javaetmoi.jetty.JettyServer</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>


        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${version.plugin.exec-maven-plugin}</version>
                    <configuration>
                        <mainClass>com.javaetmoi.jetty.JettyServer</mainClass>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- Deploy snapshots to the Sonatype OSSRH (OSS Repository Hosting) -->
    <distributionManagement>
        <downloadUrl>https://github.com/arey/spring-batch-toolkit</downloadUrl>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>eclipse</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-eclipse-plugin</artifactId>
                            <version>${version.plugin.maven-eclipse-plugin}</version>
                            <configuration>
                                <wtpversion>2.0</wtpversion>
                                <downloadSources>true</downloadSources>
                                <downloadJavadocs>true</downloadJavadocs>
                                <ajdtVersion>none</ajdtVersion>
                                <useProjectReferences>true</useProjectReferences>
                                <additionalProjectnatures>
                                    <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                                </additionalProjectnatures>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <!-- Specific profile for release or artifact deployment -->
            <!-- Sources et javadoc are packaged -->
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                    <!--GPG Signed Artefacts required by Maven Central -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${version.plugin.maven-gpg-plugin}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>appassembler</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Generate both Windows and Linux bash shell execution scripts -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <version>${version.plugin.appassembler-maven-plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>assemble</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <repositoryLayout>flat</repositoryLayout>
                            <useWildcardClassPath>true</useWildcardClassPath>
                            <!-- Set the target configuration directory to be used in the bin scripts -->
                            <configurationDirectory>conf</configurationDirectory>
                            <!-- Copy the contents from "/src/main/config" to the target
                                 configuration directory in the assembled application -->
                            <copyConfigurationDirectory>true</copyConfigurationDirectory>
                            <!-- Include the target configuration directory in the beginning of
                                 the classpath declaration in the bin scripts -->
                            <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                            <!-- Extra JVM arguments that will be included in the bin scripts -->
                            <extraJvmArguments>-Xmx1024m</extraJvmArguments>
                            <programs>
                                <program>
                                    <id>start</id>
                                    <mainClass>com.javaetmoi.jetty.JettyServer</mainClass>
                                    <name>start</name>
                                </program>
                                <program>
                                    <id>stop</id>
                                    <mainClass>com.javaetmoi.jetty.Stop</mainClass>
                                    <name>stop</name>
                                </program>
                            </programs>
                            <binFileExtensions>
                                <unix>.sh</unix>
                            </binFileExtensions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>fatjar</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${version.plugin.maven-assembly-plugin}</version>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <mainClass>com.javaetmoi.jetty.JettyServer</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        
    </profiles>


</project>